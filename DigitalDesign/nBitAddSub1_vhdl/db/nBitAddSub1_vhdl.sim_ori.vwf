/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2008 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("a[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("b[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("overflow")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("underflow")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sum")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sum[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("m")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("a[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 235.2;
		LEVEL 1 FOR 80.8;
		LEVEL 0 FOR 72.8;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 139.2;
	}
}

TRANSITION_LIST("a[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 167.2;
		LEVEL 1 FOR 65.6;
		LEVEL 0 FOR 2.4;
		LEVEL 1 FOR 80.8;
		LEVEL 0 FOR 1.6;
		LEVEL 1 FOR 67.2;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 139.2;
	}
}

TRANSITION_LIST("a[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 87.2;
		LEVEL 1 FOR 65.6;
		LEVEL 0 FOR 2.4;
		LEVEL 1 FOR 3.2;
		LEVEL 0 FOR 79.2;
		LEVEL 1 FOR 67.2;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.4;
		LEVEL 0 FOR 64.8;
		LEVEL 1 FOR 4.8;
		LEVEL 0 FOR 139.2;
	}
}

TRANSITION_LIST("a[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 87.2;
		LEVEL 1 FOR 65.6;
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 77.6;
		LEVEL 0 FOR 1.6;
		LEVEL 1 FOR 67.2;
		LEVEL 0 FOR 6.4;
		LEVEL 1 FOR 64.8;
		LEVEL 0 FOR 144.0;
	}
}

TRANSITION_LIST("b[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 89.6;
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 67.999;
		LEVEL 0 FOR 214.401;
	}
}

TRANSITION_LIST("b[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 569.6;
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 67.999;
		LEVEL 0 FOR 214.401;
	}
}

TRANSITION_LIST("b[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 92.8;
		LEVEL 1 FOR 58.4;
		LEVEL 0 FOR 6.4;
		LEVEL 1 FOR 77.6;
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 62.399;
		LEVEL 0 FOR 7.201;
		LEVEL 1 FOR 72.8;
		LEVEL 0 FOR 136.8;
	}
}

TRANSITION_LIST("b[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 89.6;
		LEVEL 1 FOR 3.2;
		LEVEL 0 FOR 58.4;
		LEVEL 1 FOR 2.4;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 3.2;
		LEVEL 0 FOR 62.399;
		LEVEL 1 FOR 2.4;
		LEVEL 0 FOR 214.401;
	}
}

TRANSITION_LIST("overflow")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("underflow")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("sum[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 252.739;
		LEVEL 1 FOR 80.745;
		LEVEL 0 FOR 80.154;
		LEVEL 1 FOR 80.515;
		LEVEL 0 FOR 237.786;
		LEVEL 1 FOR 67.813;
		LEVEL 0 FOR 75.125;
		LEVEL 1 FOR 1.909;
		LEVEL 0 FOR 123.214;
	}
}

TRANSITION_LIST("sum[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 92.344;
		LEVEL 0 FOR 159.989;
		LEVEL 1 FOR 1.03;
		LEVEL 0 FOR 0.589;
		LEVEL 1 FOR 77.971;
		LEVEL 0 FOR 80.172;
		LEVEL 1 FOR 80.231;
		LEVEL 0 FOR 85.837;
		LEVEL 1 FOR 0.589;
		LEVEL 0 FOR 3.021;
		LEVEL 1 FOR 63.371;
		LEVEL 0 FOR 4.641;
		LEVEL 1 FOR 77.6;
		LEVEL 0 FOR 2.548;
		LEVEL 1 FOR 2.63;
		LEVEL 0 FOR 0.589;
		LEVEL 1 FOR 64.773;
		LEVEL 0 FOR 75.219;
		LEVEL 1 FOR 2.241;
		LEVEL 0 FOR 124.615;
	}
}

TRANSITION_LIST("sum[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 91.356;
		LEVEL 1 FOR 0.179;
		LEVEL 0 FOR 0.749;
		LEVEL 1 FOR 79.072;
		LEVEL 0 FOR 0.179;
		LEVEL 1 FOR 80.738;
		LEVEL 0 FOR 1.108;
		LEVEL 1 FOR 77.975;
		LEVEL 0 FOR 0.179;
		LEVEL 1 FOR 79.821;
		LEVEL 0 FOR 0.179;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 0.504;
		LEVEL 1 FOR 0.227;
		LEVEL 0 FOR 85.915;
		LEVEL 1 FOR 0.589;
		LEVEL 0 FOR 2.365;
		LEVEL 1 FOR 0.578;
		LEVEL 0 FOR 63.371;
		LEVEL 1 FOR 0.051;
		LEVEL 0 FOR 1.421;
		LEVEL 1 FOR 3.169;
		LEVEL 0 FOR 77.6;
		LEVEL 1 FOR 0.031;
		LEVEL 0 FOR 1.779;
		LEVEL 1 FOR 0.738;
		LEVEL 0 FOR 2.708;
		LEVEL 1 FOR 64.492;
		LEVEL 0 FOR 0.061;
		LEVEL 1 FOR 0.731;
		LEVEL 0 FOR 2.291;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 0.928;
		LEVEL 1 FOR 2.241;
		LEVEL 0 FOR 124.675;
	}
}

TRANSITION_LIST("sum[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 92.573;
		LEVEL 1 FOR 79.482;
		LEVEL 0 FOR 0.518;
		LEVEL 1 FOR 79.482;
		LEVEL 0 FOR 1.693;
		LEVEL 1 FOR 0.589;
		LEVEL 0 FOR 0.078;
		LEVEL 1 FOR 78.158;
		LEVEL 0 FOR 79.482;
		LEVEL 1 FOR 0.518;
		LEVEL 0 FOR 79.755;
		LEVEL 1 FOR 0.227;
		LEVEL 0 FOR 85.993;
		LEVEL 1 FOR 0.589;
		LEVEL 0 FOR 0.118;
		LEVEL 1 FOR 2.247;
		LEVEL 0 FOR 0.653;
		LEVEL 1 FOR 62.7;
		LEVEL 0 FOR 0.518;
		LEVEL 1 FOR 0.129;
		LEVEL 0 FOR 1.753;
		LEVEL 1 FOR 2.759;
		LEVEL 0 FOR 77.6;
		LEVEL 1 FOR 0.441;
		LEVEL 0 FOR 1.447;
		LEVEL 1 FOR 0.153;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.793;
		LEVEL 0 FOR 63.907;
		LEVEL 1 FOR 0.273;
		LEVEL 0 FOR 0.373;
		LEVEL 1 FOR 0.653;
		LEVEL 0 FOR 2.701;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 0.518;
		LEVEL 1 FOR 2.241;
		LEVEL 0 FOR 124.386;
	}
}

TRANSITION_LIST("sum[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 92.292;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 0.489;
		LEVEL 1 FOR 79.773;
		LEVEL 0 FOR 1.498;
		LEVEL 1 FOR 0.589;
		LEVEL 0 FOR 77.651;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 79.848;
		LEVEL 1 FOR 0.152;
		LEVEL 0 FOR 0.262;
		LEVEL 1 FOR 0.227;
		LEVEL 0 FOR 86.071;
		LEVEL 1 FOR 0.589;
		LEVEL 0 FOR 0.051;
		LEVEL 1 FOR 2.889;
		LEVEL 0 FOR 62.711;
		LEVEL 1 FOR 0.262;
		LEVEL 0 FOR 2.138;
		LEVEL 1 FOR 2.248;
		LEVEL 0 FOR 77.6;
		LEVEL 1 FOR 0.952;
		LEVEL 0 FOR 1.6;
		LEVEL 1 FOR 0.489;
		LEVEL 0 FOR 2.871;
		LEVEL 1 FOR 63.84;
		LEVEL 0 FOR 0.262;
		LEVEL 1 FOR 1.026;
		LEVEL 0 FOR 2.712;
		LEVEL 1 FOR 1.448;
		LEVEL 0 FOR 70.552;
		LEVEL 1 FOR 2.248;
		LEVEL 0 FOR 124.66;
	}
}

TRANSITION_LIST("sum[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 171.995;
		LEVEL 1 FOR 0.234;
		LEVEL 0 FOR 79.766;
		LEVEL 1 FOR 0.234;
		LEVEL 0 FOR 159.766;
		LEVEL 1 FOR 0.234;
		LEVEL 0 FOR 79.766;
		LEVEL 1 FOR 0.234;
		LEVEL 0 FOR 86.966;
		LEVEL 1 FOR 2.634;
		LEVEL 0 FOR 62.966;
		LEVEL 1 FOR 1.034;
		LEVEL 0 FOR 83.766;
		LEVEL 1 FOR 0.234;
		LEVEL 0 FOR 66.966;
		LEVEL 1 FOR 1.033;
		LEVEL 0 FOR 202.172;
	}
}

TRANSITION_LIST("m")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 324.8;
		LEVEL 0 FOR 154.4;
		LEVEL 1 FOR 280.8;
	}
}

DISPLAY_LINE
{
	CHANNEL = "m";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "a[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "a[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "a[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "a[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "b[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "b[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "b[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "b[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "sum";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "sum[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sum[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sum[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sum[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sum[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sum[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "overflow";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "underflow";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 560000;
	MASTER = TRUE;
}
;
